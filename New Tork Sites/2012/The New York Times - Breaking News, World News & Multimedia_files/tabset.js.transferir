var _____WB$wombat$assign$function_____ = function(name) {return (self._wb_wombat && self._wb_wombat.local_init && self._wb_wombat.local_init(name)) || self[name]; };
if (!self.__WB_pmw) { self.__WB_pmw = function(obj) { this.__WB_source = obj; return this; } }
{
  let window = _____WB$wombat$assign$function_____("window");
  let self = _____WB$wombat$assign$function_____("self");
  let document = _____WB$wombat$assign$function_____("document");
  let location = _____WB$wombat$assign$function_____("location");
  let top = _____WB$wombat$assign$function_____("top");
  let parent = _____WB$wombat$assign$function_____("parent");
  let frames = _____WB$wombat$assign$function_____("frames");
  let opener = _____WB$wombat$assign$function_____("opener");

/* $Id: tabset.js 103281 2012-07-11 16:14:19Z konige $
 * The tool to use if you need a set of tabs.
 *
 * USE: NYTD.TabSet("idOfTabSetContainerDiv");
 */

NYTD.TabSet = function( target ) {
	function root() {
		return $(target);
	}

	function subSelect(queryString) {
		return root().select(queryString);
	}

	function activateTabLink(event) {
		blankTabsAndContent();
		selectTab(event.findElement('li'));
		event.element().blur();
		event.stop();
	}

	function blankTabsAndContent() {
		api.getTabs().invoke("removeClassName", "selected");
		api.getTabContent().invoke("removeClassName", "active");
	}

	function selectTab(tabNode) {
		if (tabNode) {
		  var index = api.getTabs().indexOf(tabNode);
			activateTab(tabNode, api.getTabContent()[index]);
		}
	}

	function activateTab(tabNode, contentNode) {
		if (tabNode && contentNode) {
			tabNode.addClassName("selected");
			contentNode.addClassName("active");
		}
	}

	var api = {
		subSelect: function(queryString) { return subSelect(queryString); },
		getRoot: function() { return root() },
		selectedTabNotFound: function() { return subSelect("ul.tabs li.selected").length < 1},
		activeContentNotFound: function() { return subSelect(".tabContent.active").length < 1},
		getTabs: function() { return subSelect("ul.tabs li")},
		getTabLinks: function() { return subSelect("ul.tabs li a")},
		getTabContent: function() { return subSelect(".tabContent")},
		activateTab: function(tabNode, contentNode) {activateTab(tabNode, contentNode);},
		activateTabLinks: function() {return activateTabLink;}
	};

	api.getTabs().invoke("observe", "click", activateTabLink);  
	if(api.selectedTabNotFound() || api.activeContentNotFound()) {
		blankTabsAndContent();
		activateTab(api.getTabs()[0], api.getTabContent()[0]);
		}
	return api;
};

// Automatically tab-i-fy nodes with a class of tabAutoLoad
document.observe("dom:loaded", function() {
	$$(".tabAutoLoad").each(function(tabSet){
		new NYTD.TabSet(tabSet);
	});
});

// Compatibility
if(!($$("body#home"))) {
    var Accordian = NYTD.TabSet;
}


}
/*
     FILE ARCHIVED ON 23:50:46 Jul 31, 2012 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:28:16 Feb 23, 2022.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
/*
playback timings (ms):
  captures_list: 951.606
  exclusion.robots: 0.091
  exclusion.robots.policy: 0.084
  RedisCDXSource: 176.912
  esindex: 0.01
  LoadShardBlock: 554.367 (3)
  PetaboxLoader3.datanode: 3455.905 (5)
  CDXLines.iter: 66.671 (3)
  load_resource: 3499.879 (2)
  PetaboxLoader3.resolve: 578.176 (2)
*/